// Generated from server/Bos.g4 by ANTLR 4.13.2
// jshint ignore: start
const antlr4 = require('antlr4').default;



const serializedATN = [4,0,93,833,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,
85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,
7,92,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,
1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,
1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,
1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,
1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,
12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,
17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,
20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,
1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,
23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,
1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,
25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,
29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,
1,31,1,31,3,31,435,8,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,
1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
33,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,
1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,
39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,42,
1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,
45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,
1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,
48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,
1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,
51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,53,1,53,1,53,
1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,
55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,57,
1,57,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,62,1,63,1,63,1,
63,1,64,1,64,1,65,1,65,1,65,1,66,1,66,1,67,1,67,1,67,1,68,1,68,1,68,1,68,
1,68,1,68,1,68,1,68,3,68,654,8,68,1,69,1,69,1,69,1,69,1,69,1,69,3,69,662,
8,69,1,70,1,70,1,70,1,70,1,70,1,70,1,70,3,70,671,8,70,1,71,1,71,1,71,1,71,
1,71,1,71,1,71,1,71,3,71,681,8,71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,
1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,81,1,81,1,82,1,82,1,
83,1,83,5,83,707,8,83,10,83,12,83,710,9,83,1,83,1,83,3,83,714,8,83,1,83,
4,83,717,8,83,11,83,12,83,718,1,83,4,83,722,8,83,11,83,12,83,723,1,83,1,
83,1,84,1,84,5,84,730,8,84,10,84,12,84,733,9,84,1,84,1,84,1,85,4,85,738,
8,85,11,85,12,85,739,1,85,1,85,1,86,1,86,3,86,746,8,86,1,86,3,86,749,8,86,
1,86,1,86,1,87,1,87,1,87,1,87,5,87,757,8,87,10,87,12,87,760,9,87,1,87,1,
87,1,88,1,88,1,88,1,88,5,88,768,8,88,10,88,12,88,771,9,88,1,88,1,88,1,88,
1,88,1,88,1,89,4,89,779,8,89,11,89,12,89,780,1,89,1,89,1,89,4,89,786,8,89,
11,89,12,89,787,3,89,790,8,89,1,90,5,90,793,8,90,10,90,12,90,796,9,90,1,
90,1,90,4,90,800,8,90,11,90,12,90,801,1,90,4,90,805,8,90,11,90,12,90,806,
1,90,1,90,5,90,811,8,90,10,90,12,90,814,9,90,3,90,816,8,90,1,91,1,91,5,91,
820,8,91,10,91,12,91,823,9,91,1,92,1,92,5,92,827,8,92,10,92,12,92,830,9,
92,1,92,1,92,3,708,769,828,0,93,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,
91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,
113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,
67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,
155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,
88,177,89,179,90,181,91,183,92,185,93,1,0,8,1,0,10,10,2,0,9,9,32,32,2,0,
10,10,13,13,1,0,48,57,2,0,88,88,120,120,3,0,48,57,65,70,97,102,3,0,65,90,
95,95,97,122,4,0,48,57,65,90,95,95,97,122,861,0,1,1,0,0,0,0,3,1,0,0,0,0,
5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,
39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,
0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,
0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,
0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,
95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,
0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,
0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,
0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,
0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,
147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,
1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,
0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,
0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,1,187,1,0,0,
0,3,194,1,0,0,0,5,201,1,0,0,0,7,208,1,0,0,0,9,216,1,0,0,0,11,225,1,0,0,0,
13,232,1,0,0,0,15,239,1,0,0,0,17,247,1,0,0,0,19,254,1,0,0,0,21,258,1,0,0,
0,23,264,1,0,0,0,25,269,1,0,0,0,27,274,1,0,0,0,29,279,1,0,0,0,31,289,1,0,
0,0,33,294,1,0,0,0,35,299,1,0,0,0,37,305,1,0,0,0,39,316,1,0,0,0,41,328,1,
0,0,0,43,339,1,0,0,0,45,348,1,0,0,0,47,354,1,0,0,0,49,368,1,0,0,0,51,382,
1,0,0,0,53,390,1,0,0,0,55,394,1,0,0,0,57,406,1,0,0,0,59,416,1,0,0,0,61,423,
1,0,0,0,63,434,1,0,0,0,65,436,1,0,0,0,67,449,1,0,0,0,69,461,1,0,0,0,71,464,
1,0,0,0,73,470,1,0,0,0,75,474,1,0,0,0,77,481,1,0,0,0,79,487,1,0,0,0,81,492,
1,0,0,0,83,497,1,0,0,0,85,500,1,0,0,0,87,505,1,0,0,0,89,511,1,0,0,0,91,515,
1,0,0,0,93,520,1,0,0,0,95,526,1,0,0,0,97,545,1,0,0,0,99,556,1,0,0,0,101,
567,1,0,0,0,103,573,1,0,0,0,105,584,1,0,0,0,107,588,1,0,0,0,109,594,1,0,
0,0,111,601,1,0,0,0,113,617,1,0,0,0,115,619,1,0,0,0,117,621,1,0,0,0,119,
623,1,0,0,0,121,625,1,0,0,0,123,627,1,0,0,0,125,629,1,0,0,0,127,632,1,0,
0,0,129,635,1,0,0,0,131,637,1,0,0,0,133,640,1,0,0,0,135,642,1,0,0,0,137,
653,1,0,0,0,139,661,1,0,0,0,141,670,1,0,0,0,143,680,1,0,0,0,145,682,1,0,
0,0,147,684,1,0,0,0,149,686,1,0,0,0,151,688,1,0,0,0,153,690,1,0,0,0,155,
692,1,0,0,0,157,694,1,0,0,0,159,696,1,0,0,0,161,698,1,0,0,0,163,700,1,0,
0,0,165,702,1,0,0,0,167,704,1,0,0,0,169,727,1,0,0,0,171,737,1,0,0,0,173,
748,1,0,0,0,175,752,1,0,0,0,177,763,1,0,0,0,179,789,1,0,0,0,181,815,1,0,
0,0,183,817,1,0,0,0,185,824,1,0,0,0,187,188,5,120,0,0,188,189,5,45,0,0,189,
190,5,97,0,0,190,191,5,120,0,0,191,192,5,105,0,0,192,193,5,115,0,0,193,2,
1,0,0,0,194,195,5,121,0,0,195,196,5,45,0,0,196,197,5,97,0,0,197,198,5,120,
0,0,198,199,5,105,0,0,199,200,5,115,0,0,200,4,1,0,0,0,201,202,5,122,0,0,
202,203,5,45,0,0,203,204,5,97,0,0,204,205,5,120,0,0,205,206,5,105,0,0,206,
207,5,115,0,0,207,6,1,0,0,0,208,209,5,35,0,0,209,210,5,100,0,0,210,211,5,
101,0,0,211,212,5,102,0,0,212,213,5,105,0,0,213,214,5,110,0,0,214,215,5,
101,0,0,215,8,1,0,0,0,216,217,5,35,0,0,217,218,5,105,0,0,218,219,5,110,0,
0,219,220,5,99,0,0,220,221,5,108,0,0,221,222,5,117,0,0,222,223,5,100,0,0,
223,224,5,101,0,0,224,10,1,0,0,0,225,226,5,35,0,0,226,227,5,117,0,0,227,
228,5,110,0,0,228,229,5,100,0,0,229,230,5,101,0,0,230,231,5,102,0,0,231,
12,1,0,0,0,232,233,5,35,0,0,233,234,5,105,0,0,234,235,5,102,0,0,235,236,
5,100,0,0,236,237,5,101,0,0,237,238,5,102,0,0,238,14,1,0,0,0,239,240,5,35,
0,0,240,241,5,105,0,0,241,242,5,102,0,0,242,243,5,110,0,0,243,244,5,100,
0,0,244,245,5,101,0,0,245,246,5,102,0,0,246,16,1,0,0,0,247,248,5,35,0,0,
248,249,5,101,0,0,249,250,5,110,0,0,250,251,5,100,0,0,251,252,5,105,0,0,
252,253,5,102,0,0,253,18,1,0,0,0,254,255,5,35,0,0,255,256,5,105,0,0,256,
257,5,102,0,0,257,20,1,0,0,0,258,259,5,35,0,0,259,260,5,101,0,0,260,261,
5,108,0,0,261,262,5,115,0,0,262,263,5,101,0,0,263,22,1,0,0,0,264,265,5,109,
0,0,265,266,5,111,0,0,266,267,5,118,0,0,267,268,5,101,0,0,268,24,1,0,0,0,
269,270,5,116,0,0,270,271,5,117,0,0,271,272,5,114,0,0,272,273,5,110,0,0,
273,26,1,0,0,0,274,275,5,115,0,0,275,276,5,112,0,0,276,277,5,105,0,0,277,
278,5,110,0,0,278,28,1,0,0,0,279,280,5,115,0,0,280,281,5,116,0,0,281,282,
5,111,0,0,282,283,5,112,0,0,283,284,5,45,0,0,284,285,5,115,0,0,285,286,5,
112,0,0,286,287,5,105,0,0,287,288,5,110,0,0,288,30,1,0,0,0,289,290,5,115,
0,0,290,291,5,104,0,0,291,292,5,111,0,0,292,293,5,119,0,0,293,32,1,0,0,0,
294,295,5,104,0,0,295,296,5,105,0,0,296,297,5,100,0,0,297,298,5,101,0,0,
298,34,1,0,0,0,299,300,5,99,0,0,300,301,5,97,0,0,301,302,5,99,0,0,302,303,
5,104,0,0,303,304,5,101,0,0,304,36,1,0,0,0,305,306,5,100,0,0,306,307,5,111,
0,0,307,308,5,110,0,0,308,309,5,116,0,0,309,310,5,45,0,0,310,311,5,99,0,
0,311,312,5,97,0,0,312,313,5,99,0,0,313,314,5,104,0,0,314,315,5,101,0,0,
315,38,1,0,0,0,316,317,5,100,0,0,317,318,5,111,0,0,318,319,5,110,0,0,319,
320,5,116,0,0,320,321,5,45,0,0,321,322,5,115,0,0,322,323,5,104,0,0,323,324,
5,97,0,0,324,325,5,100,0,0,325,326,5,111,0,0,326,327,5,119,0,0,327,40,1,
0,0,0,328,329,5,100,0,0,329,330,5,111,0,0,330,331,5,110,0,0,331,332,5,116,
0,0,332,333,5,45,0,0,333,334,5,115,0,0,334,335,5,104,0,0,335,336,5,97,0,
0,336,337,5,100,0,0,337,338,5,101,0,0,338,42,1,0,0,0,339,340,5,101,0,0,340,
341,5,109,0,0,341,342,5,105,0,0,342,343,5,116,0,0,343,344,5,45,0,0,344,345,
5,115,0,0,345,346,5,102,0,0,346,347,5,120,0,0,347,44,1,0,0,0,348,349,5,115,
0,0,349,350,5,108,0,0,350,351,5,101,0,0,351,352,5,101,0,0,352,353,5,112,
0,0,353,46,1,0,0,0,354,355,5,119,0,0,355,356,5,97,0,0,356,357,5,105,0,0,
357,358,5,116,0,0,358,359,5,45,0,0,359,360,5,102,0,0,360,361,5,111,0,0,361,
362,5,114,0,0,362,363,5,45,0,0,363,364,5,116,0,0,364,365,5,117,0,0,365,366,
5,114,0,0,366,367,5,110,0,0,367,48,1,0,0,0,368,369,5,119,0,0,369,370,5,97,
0,0,370,371,5,105,0,0,371,372,5,116,0,0,372,373,5,45,0,0,373,374,5,102,0,
0,374,375,5,111,0,0,375,376,5,114,0,0,376,377,5,45,0,0,377,378,5,109,0,0,
378,379,5,111,0,0,379,380,5,118,0,0,380,381,5,101,0,0,381,50,1,0,0,0,382,
383,5,101,0,0,383,384,5,120,0,0,384,385,5,112,0,0,385,386,5,108,0,0,386,
387,5,111,0,0,387,388,5,100,0,0,388,389,5,101,0,0,389,52,1,0,0,0,390,391,
5,115,0,0,391,392,5,101,0,0,392,393,5,116,0,0,393,54,1,0,0,0,394,395,5,97,
0,0,395,396,5,116,0,0,396,397,5,116,0,0,397,398,5,97,0,0,398,399,5,99,0,
0,399,400,5,104,0,0,400,401,5,45,0,0,401,402,5,117,0,0,402,403,5,110,0,0,
403,404,5,105,0,0,404,405,5,116,0,0,405,56,1,0,0,0,406,407,5,100,0,0,407,
408,5,114,0,0,408,409,5,111,0,0,409,410,5,112,0,0,410,411,5,45,0,0,411,412,
5,117,0,0,412,413,5,110,0,0,413,414,5,105,0,0,414,415,5,116,0,0,415,58,1,
0,0,0,416,417,5,114,0,0,417,418,5,101,0,0,418,419,5,116,0,0,419,420,5,117,
0,0,420,421,5,114,0,0,421,422,5,110,0,0,422,60,1,0,0,0,423,424,5,114,0,0,
424,425,5,97,0,0,425,426,5,110,0,0,426,427,5,100,0,0,427,62,1,0,0,0,428,
429,5,103,0,0,429,430,5,101,0,0,430,435,5,116,0,0,431,432,5,71,0,0,432,433,
5,69,0,0,433,435,5,84,0,0,434,428,1,0,0,0,434,431,1,0,0,0,435,64,1,0,0,0,
436,437,5,115,0,0,437,438,5,116,0,0,438,439,5,97,0,0,439,440,5,114,0,0,440,
441,5,116,0,0,441,442,5,45,0,0,442,443,5,115,0,0,443,444,5,99,0,0,444,445,
5,114,0,0,445,446,5,105,0,0,446,447,5,112,0,0,447,448,5,116,0,0,448,66,1,
0,0,0,449,450,5,99,0,0,450,451,5,97,0,0,451,452,5,108,0,0,452,453,5,108,
0,0,453,454,5,45,0,0,454,455,5,115,0,0,455,456,5,99,0,0,456,457,5,114,0,
0,457,458,5,105,0,0,458,459,5,112,0,0,459,460,5,116,0,0,460,68,1,0,0,0,461,
462,5,116,0,0,462,463,5,111,0,0,463,70,1,0,0,0,464,465,5,115,0,0,465,466,
5,112,0,0,466,467,5,101,0,0,467,468,5,101,0,0,468,469,5,100,0,0,469,72,1,
0,0,0,470,471,5,110,0,0,471,472,5,111,0,0,472,473,5,119,0,0,473,74,1,0,0,
0,474,475,5,97,0,0,475,476,5,114,0,0,476,477,5,111,0,0,477,478,5,117,0,0,
478,479,5,110,0,0,479,480,5,100,0,0,480,76,1,0,0,0,481,482,5,97,0,0,482,
483,5,108,0,0,483,484,5,111,0,0,484,485,5,110,0,0,485,486,5,103,0,0,486,
78,1,0,0,0,487,488,5,116,0,0,488,489,5,121,0,0,489,490,5,112,0,0,490,491,
5,101,0,0,491,80,1,0,0,0,492,493,5,102,0,0,493,494,5,114,0,0,494,495,5,111,
0,0,495,496,5,109,0,0,496,82,1,0,0,0,497,498,5,105,0,0,498,499,5,102,0,0,
499,84,1,0,0,0,500,501,5,101,0,0,501,502,5,108,0,0,502,503,5,115,0,0,503,
504,5,101,0,0,504,86,1,0,0,0,505,506,5,119,0,0,506,507,5,104,0,0,507,508,
5,105,0,0,508,509,5,108,0,0,509,510,5,101,0,0,510,88,1,0,0,0,511,512,5,102,
0,0,512,513,5,111,0,0,513,514,5,114,0,0,514,90,1,0,0,0,515,516,5,84,0,0,
516,517,5,82,0,0,517,518,5,85,0,0,518,519,5,69,0,0,519,92,1,0,0,0,520,521,
5,70,0,0,521,522,5,65,0,0,522,523,5,76,0,0,523,524,5,83,0,0,524,525,5,69,
0,0,525,94,1,0,0,0,526,527,5,85,0,0,527,528,5,78,0,0,528,529,5,75,0,0,529,
530,5,78,0,0,530,531,5,79,0,0,531,532,5,87,0,0,532,533,5,78,0,0,533,534,
5,95,0,0,534,535,5,85,0,0,535,536,5,78,0,0,536,537,5,73,0,0,537,538,5,84,
0,0,538,539,5,95,0,0,539,540,5,86,0,0,540,541,5,65,0,0,541,542,5,76,0,0,
542,543,5,85,0,0,543,544,5,69,0,0,544,96,1,0,0,0,545,546,5,97,0,0,546,547,
5,99,0,0,547,548,5,99,0,0,548,549,5,101,0,0,549,550,5,108,0,0,550,551,5,
101,0,0,551,552,5,114,0,0,552,553,5,97,0,0,553,554,5,116,0,0,554,555,5,101,
0,0,555,98,1,0,0,0,556,557,5,100,0,0,557,558,5,101,0,0,558,559,5,99,0,0,
559,560,5,101,0,0,560,561,5,108,0,0,561,562,5,101,0,0,562,563,5,114,0,0,
563,564,5,97,0,0,564,565,5,116,0,0,565,566,5,101,0,0,566,100,1,0,0,0,567,
568,5,112,0,0,568,569,5,105,0,0,569,570,5,101,0,0,570,571,5,99,0,0,571,572,
5,101,0,0,572,102,1,0,0,0,573,574,5,115,0,0,574,575,5,116,0,0,575,576,5,
97,0,0,576,577,5,116,0,0,577,578,5,105,0,0,578,579,5,99,0,0,579,580,5,45,
0,0,580,581,5,118,0,0,581,582,5,97,0,0,582,583,5,114,0,0,583,104,1,0,0,0,
584,585,5,118,0,0,585,586,5,97,0,0,586,587,5,114,0,0,587,106,1,0,0,0,588,
589,5,115,0,0,589,590,5,111,0,0,590,591,5,117,0,0,591,592,5,110,0,0,592,
593,5,100,0,0,593,108,1,0,0,0,594,595,5,115,0,0,595,596,5,105,0,0,596,597,
5,103,0,0,597,598,5,110,0,0,598,599,5,97,0,0,599,600,5,108,0,0,600,110,1,
0,0,0,601,602,5,115,0,0,602,603,5,101,0,0,603,604,5,116,0,0,604,605,5,45,
0,0,605,606,5,115,0,0,606,607,5,105,0,0,607,608,5,103,0,0,608,609,5,110,
0,0,609,610,5,97,0,0,610,611,5,108,0,0,611,612,5,45,0,0,612,613,5,109,0,
0,613,614,5,97,0,0,614,615,5,115,0,0,615,616,5,107,0,0,616,112,1,0,0,0,617,
618,5,43,0,0,618,114,1,0,0,0,619,620,5,45,0,0,620,116,1,0,0,0,621,622,5,
42,0,0,622,118,1,0,0,0,623,624,5,47,0,0,624,120,1,0,0,0,625,626,5,37,0,0,
626,122,1,0,0,0,627,628,5,61,0,0,628,124,1,0,0,0,629,630,5,61,0,0,630,631,
5,61,0,0,631,126,1,0,0,0,632,633,5,33,0,0,633,634,5,61,0,0,634,128,1,0,0,
0,635,636,5,60,0,0,636,130,1,0,0,0,637,638,5,60,0,0,638,639,5,61,0,0,639,
132,1,0,0,0,640,641,5,62,0,0,641,134,1,0,0,0,642,643,5,62,0,0,643,644,5,
61,0,0,644,136,1,0,0,0,645,646,5,38,0,0,646,654,5,38,0,0,647,648,5,97,0,
0,648,649,5,110,0,0,649,654,5,100,0,0,650,651,5,65,0,0,651,652,5,78,0,0,
652,654,5,68,0,0,653,645,1,0,0,0,653,647,1,0,0,0,653,650,1,0,0,0,654,138,
1,0,0,0,655,656,5,124,0,0,656,662,5,124,0,0,657,658,5,111,0,0,658,662,5,
114,0,0,659,660,5,79,0,0,660,662,5,82,0,0,661,655,1,0,0,0,661,657,1,0,0,
0,661,659,1,0,0,0,662,140,1,0,0,0,663,671,5,33,0,0,664,665,5,110,0,0,665,
666,5,111,0,0,666,671,5,116,0,0,667,668,5,78,0,0,668,669,5,79,0,0,669,671,
5,84,0,0,670,663,1,0,0,0,670,664,1,0,0,0,670,667,1,0,0,0,671,142,1,0,0,0,
672,673,5,94,0,0,673,681,5,94,0,0,674,675,5,120,0,0,675,676,5,111,0,0,676,
681,5,114,0,0,677,678,5,88,0,0,678,679,5,79,0,0,679,681,5,82,0,0,680,672,
1,0,0,0,680,674,1,0,0,0,680,677,1,0,0,0,681,144,1,0,0,0,682,683,5,38,0,0,
683,146,1,0,0,0,684,685,5,124,0,0,685,148,1,0,0,0,686,687,5,94,0,0,687,150,
1,0,0,0,688,689,5,40,0,0,689,152,1,0,0,0,690,691,5,41,0,0,691,154,1,0,0,
0,692,693,5,123,0,0,693,156,1,0,0,0,694,695,5,125,0,0,695,158,1,0,0,0,696,
697,5,91,0,0,697,160,1,0,0,0,698,699,5,93,0,0,699,162,1,0,0,0,700,701,5,
44,0,0,701,164,1,0,0,0,702,703,5,59,0,0,703,166,1,0,0,0,704,716,5,35,0,0,
705,707,8,0,0,0,706,705,1,0,0,0,707,710,1,0,0,0,708,709,1,0,0,0,708,706,
1,0,0,0,709,711,1,0,0,0,710,708,1,0,0,0,711,713,5,92,0,0,712,714,5,13,0,
0,713,712,1,0,0,0,713,714,1,0,0,0,714,715,1,0,0,0,715,717,5,10,0,0,716,708,
1,0,0,0,717,718,1,0,0,0,718,716,1,0,0,0,718,719,1,0,0,0,719,721,1,0,0,0,
720,722,8,0,0,0,721,720,1,0,0,0,722,723,1,0,0,0,723,721,1,0,0,0,723,724,
1,0,0,0,724,725,1,0,0,0,725,726,6,83,0,0,726,168,1,0,0,0,727,731,5,35,0,
0,728,730,8,0,0,0,729,728,1,0,0,0,730,733,1,0,0,0,731,729,1,0,0,0,731,732,
1,0,0,0,732,734,1,0,0,0,733,731,1,0,0,0,734,735,6,84,0,0,735,170,1,0,0,0,
736,738,7,1,0,0,737,736,1,0,0,0,738,739,1,0,0,0,739,737,1,0,0,0,739,740,
1,0,0,0,740,741,1,0,0,0,741,742,6,85,0,0,742,172,1,0,0,0,743,745,5,13,0,
0,744,746,5,10,0,0,745,744,1,0,0,0,745,746,1,0,0,0,746,749,1,0,0,0,747,749,
5,10,0,0,748,743,1,0,0,0,748,747,1,0,0,0,749,750,1,0,0,0,750,751,6,86,0,
0,751,174,1,0,0,0,752,753,5,47,0,0,753,754,5,47,0,0,754,758,1,0,0,0,755,
757,8,2,0,0,756,755,1,0,0,0,757,760,1,0,0,0,758,756,1,0,0,0,758,759,1,0,
0,0,759,761,1,0,0,0,760,758,1,0,0,0,761,762,6,87,0,0,762,176,1,0,0,0,763,
764,5,47,0,0,764,765,5,42,0,0,765,769,1,0,0,0,766,768,9,0,0,0,767,766,1,
0,0,0,768,771,1,0,0,0,769,770,1,0,0,0,769,767,1,0,0,0,770,772,1,0,0,0,771,
769,1,0,0,0,772,773,5,42,0,0,773,774,5,47,0,0,774,775,1,0,0,0,775,776,6,
88,0,0,776,178,1,0,0,0,777,779,7,3,0,0,778,777,1,0,0,0,779,780,1,0,0,0,780,
778,1,0,0,0,780,781,1,0,0,0,781,790,1,0,0,0,782,783,5,48,0,0,783,785,7,4,
0,0,784,786,7,5,0,0,785,784,1,0,0,0,786,787,1,0,0,0,787,785,1,0,0,0,787,
788,1,0,0,0,788,790,1,0,0,0,789,778,1,0,0,0,789,782,1,0,0,0,790,180,1,0,
0,0,791,793,7,3,0,0,792,791,1,0,0,0,793,796,1,0,0,0,794,792,1,0,0,0,794,
795,1,0,0,0,795,797,1,0,0,0,796,794,1,0,0,0,797,799,5,46,0,0,798,800,7,3,
0,0,799,798,1,0,0,0,800,801,1,0,0,0,801,799,1,0,0,0,801,802,1,0,0,0,802,
816,1,0,0,0,803,805,7,3,0,0,804,803,1,0,0,0,805,806,1,0,0,0,806,804,1,0,
0,0,806,807,1,0,0,0,807,808,1,0,0,0,808,812,5,46,0,0,809,811,7,3,0,0,810,
809,1,0,0,0,811,814,1,0,0,0,812,810,1,0,0,0,812,813,1,0,0,0,813,816,1,0,
0,0,814,812,1,0,0,0,815,794,1,0,0,0,815,804,1,0,0,0,816,182,1,0,0,0,817,
821,7,6,0,0,818,820,7,7,0,0,819,818,1,0,0,0,820,823,1,0,0,0,821,819,1,0,
0,0,821,822,1,0,0,0,822,184,1,0,0,0,823,821,1,0,0,0,824,828,5,34,0,0,825,
827,9,0,0,0,826,825,1,0,0,0,827,830,1,0,0,0,828,829,1,0,0,0,828,826,1,0,
0,0,829,831,1,0,0,0,830,828,1,0,0,0,831,832,5,34,0,0,832,186,1,0,0,0,26,
0,434,653,661,670,680,708,713,718,723,731,739,745,748,758,769,780,787,789,
794,801,806,812,815,821,828,1,0,1,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

class BosLexer extends antlr4.Lexer {

    static grammarFileName = "Bos.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'x-axis'", "'y-axis'", "'z-axis'", "'#define'", 
                         "'#include'", "'#undef'", "'#ifdef'", "'#ifndef'", 
                         "'#endif'", "'#if'", "'#else'", "'move'", "'turn'", 
                         "'spin'", "'stop-spin'", "'show'", "'hide'", "'cache'", 
                         "'dont-cache'", "'dont-shadow'", "'dont-shade'", 
                         "'emit-sfx'", "'sleep'", "'wait-for-turn'", "'wait-for-move'", 
                         "'explode'", "'set'", "'attach-unit'", "'drop-unit'", 
                         "'return'", "'rand'", null, "'start-script'", "'call-script'", 
                         "'to'", "'speed'", "'now'", "'around'", "'along'", 
                         "'type'", "'from'", "'if'", "'else'", "'while'", 
                         "'for'", "'TRUE'", "'FALSE'", "'UNKNOWN_UNIT_VALUE'", 
                         "'accelerate'", "'decelerate'", "'piece'", "'static-var'", 
                         "'var'", "'sound'", "'signal'", "'set-signal-mask'", 
                         "'+'", "'-'", "'*'", "'/'", "'%'", "'='", "'=='", 
                         "'!='", "'<'", "'<='", "'>'", "'>='", null, null, 
                         null, null, "'&'", "'|'", "'^'", "'('", "')'", 
                         "'{'", "'}'", "'['", "']'", "','", "';'" ];
	static symbolicNames = [ null, null, null, null, "D_DEFINE", "D_INCLUDE", 
                          "D_UNDEF", "D_IFDEF", "D_IFNDEF", "D_ENDIF", "D_IF", 
                          "D_ELSE", "MOVE", "TURN", "SPIN", "STOP_SPIN", 
                          "SHOW", "HIDE", "CACHE", "DONT_CACHE", "DONT_SHADOW", 
                          "DONT_SHADE", "EMIT_SFX", "SLEEP", "WAIT_FOR_TURN", 
                          "WAIT_FOR_MOVE", "EXPLODE", "SET", "ATTACH_UNIT", 
                          "DROP_UNIT", "RETURN", "RAND", "GET", "START_SCRIPT", 
                          "CALL_SCRIPT", "TO", "SPEED", "NOW", "AROUND", 
                          "ALONG", "TYPE", "FROM", "IF", "ELSE", "WHILE", 
                          "FOR", "TRUE", "FALSE", "UNKNOWN_UNIT_VALUE", 
                          "ACCELERATE", "DECELERATE", "PIECE", "STATIC_VAR", 
                          "VAR", "SOUND", "SIGNAL", "SET_SIGNAL_MASK", "PLUS", 
                          "MINUS", "MULTIPLY", "DIVIDE", "MODULO", "EQUAL", 
                          "DOUBLE_EQUAL", "NOT_EQUAL", "LESS_THAN", "LESS_EQUAL", 
                          "GREATER_THAN", "GREATER_EQUAL", "LOGICAL_AND", 
                          "LOGICAL_OR", "LOGICAL_NOT", "LOGICAL_XOR", "BITWISE_AND", 
                          "BITWISE_OR", "BITWISE_XOR", "LPAREN", "RPAREN", 
                          "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "COMMA", 
                          "SEMICOLON", "MULTI_LINE_MACRO", "DIRECTIVE", 
                          "WHITESPACE", "NEWLINE", "LINE_COMMENT", "BLOCK_COMMENT", 
                          "INTEGER_CONSTANT", "FLOAT_CONSTANT", "IDENTIFIER", 
                          "STRING" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "D_DEFINE", "D_INCLUDE", "D_UNDEF", 
                      "D_IFDEF", "D_IFNDEF", "D_ENDIF", "D_IF", "D_ELSE", 
                      "MOVE", "TURN", "SPIN", "STOP_SPIN", "SHOW", "HIDE", 
                      "CACHE", "DONT_CACHE", "DONT_SHADOW", "DONT_SHADE", 
                      "EMIT_SFX", "SLEEP", "WAIT_FOR_TURN", "WAIT_FOR_MOVE", 
                      "EXPLODE", "SET", "ATTACH_UNIT", "DROP_UNIT", "RETURN", 
                      "RAND", "GET", "START_SCRIPT", "CALL_SCRIPT", "TO", 
                      "SPEED", "NOW", "AROUND", "ALONG", "TYPE", "FROM", 
                      "IF", "ELSE", "WHILE", "FOR", "TRUE", "FALSE", "UNKNOWN_UNIT_VALUE", 
                      "ACCELERATE", "DECELERATE", "PIECE", "STATIC_VAR", 
                      "VAR", "SOUND", "SIGNAL", "SET_SIGNAL_MASK", "PLUS", 
                      "MINUS", "MULTIPLY", "DIVIDE", "MODULO", "EQUAL", 
                      "DOUBLE_EQUAL", "NOT_EQUAL", "LESS_THAN", "LESS_EQUAL", 
                      "GREATER_THAN", "GREATER_EQUAL", "LOGICAL_AND", "LOGICAL_OR", 
                      "LOGICAL_NOT", "LOGICAL_XOR", "BITWISE_AND", "BITWISE_OR", 
                      "BITWISE_XOR", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
                      "LBRACKET", "RBRACKET", "COMMA", "SEMICOLON", "MULTI_LINE_MACRO", 
                      "DIRECTIVE", "WHITESPACE", "NEWLINE", "LINE_COMMENT", 
                      "BLOCK_COMMENT", "INTEGER_CONSTANT", "FLOAT_CONSTANT", 
                      "IDENTIFIER", "STRING" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

BosLexer.EOF = antlr4.Token.EOF;
BosLexer.T__0 = 1;
BosLexer.T__1 = 2;
BosLexer.T__2 = 3;
BosLexer.D_DEFINE = 4;
BosLexer.D_INCLUDE = 5;
BosLexer.D_UNDEF = 6;
BosLexer.D_IFDEF = 7;
BosLexer.D_IFNDEF = 8;
BosLexer.D_ENDIF = 9;
BosLexer.D_IF = 10;
BosLexer.D_ELSE = 11;
BosLexer.MOVE = 12;
BosLexer.TURN = 13;
BosLexer.SPIN = 14;
BosLexer.STOP_SPIN = 15;
BosLexer.SHOW = 16;
BosLexer.HIDE = 17;
BosLexer.CACHE = 18;
BosLexer.DONT_CACHE = 19;
BosLexer.DONT_SHADOW = 20;
BosLexer.DONT_SHADE = 21;
BosLexer.EMIT_SFX = 22;
BosLexer.SLEEP = 23;
BosLexer.WAIT_FOR_TURN = 24;
BosLexer.WAIT_FOR_MOVE = 25;
BosLexer.EXPLODE = 26;
BosLexer.SET = 27;
BosLexer.ATTACH_UNIT = 28;
BosLexer.DROP_UNIT = 29;
BosLexer.RETURN = 30;
BosLexer.RAND = 31;
BosLexer.GET = 32;
BosLexer.START_SCRIPT = 33;
BosLexer.CALL_SCRIPT = 34;
BosLexer.TO = 35;
BosLexer.SPEED = 36;
BosLexer.NOW = 37;
BosLexer.AROUND = 38;
BosLexer.ALONG = 39;
BosLexer.TYPE = 40;
BosLexer.FROM = 41;
BosLexer.IF = 42;
BosLexer.ELSE = 43;
BosLexer.WHILE = 44;
BosLexer.FOR = 45;
BosLexer.TRUE = 46;
BosLexer.FALSE = 47;
BosLexer.UNKNOWN_UNIT_VALUE = 48;
BosLexer.ACCELERATE = 49;
BosLexer.DECELERATE = 50;
BosLexer.PIECE = 51;
BosLexer.STATIC_VAR = 52;
BosLexer.VAR = 53;
BosLexer.SOUND = 54;
BosLexer.SIGNAL = 55;
BosLexer.SET_SIGNAL_MASK = 56;
BosLexer.PLUS = 57;
BosLexer.MINUS = 58;
BosLexer.MULTIPLY = 59;
BosLexer.DIVIDE = 60;
BosLexer.MODULO = 61;
BosLexer.EQUAL = 62;
BosLexer.DOUBLE_EQUAL = 63;
BosLexer.NOT_EQUAL = 64;
BosLexer.LESS_THAN = 65;
BosLexer.LESS_EQUAL = 66;
BosLexer.GREATER_THAN = 67;
BosLexer.GREATER_EQUAL = 68;
BosLexer.LOGICAL_AND = 69;
BosLexer.LOGICAL_OR = 70;
BosLexer.LOGICAL_NOT = 71;
BosLexer.LOGICAL_XOR = 72;
BosLexer.BITWISE_AND = 73;
BosLexer.BITWISE_OR = 74;
BosLexer.BITWISE_XOR = 75;
BosLexer.LPAREN = 76;
BosLexer.RPAREN = 77;
BosLexer.LBRACE = 78;
BosLexer.RBRACE = 79;
BosLexer.LBRACKET = 80;
BosLexer.RBRACKET = 81;
BosLexer.COMMA = 82;
BosLexer.SEMICOLON = 83;
BosLexer.MULTI_LINE_MACRO = 84;
BosLexer.DIRECTIVE = 85;
BosLexer.WHITESPACE = 86;
BosLexer.NEWLINE = 87;
BosLexer.LINE_COMMENT = 88;
BosLexer.BLOCK_COMMENT = 89;
BosLexer.INTEGER_CONSTANT = 90;
BosLexer.FLOAT_CONSTANT = 91;
BosLexer.IDENTIFIER = 92;
BosLexer.STRING = 93;




module.exports = BosLexer;
